// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nested.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Nested {

  /// <summary>Holder for reflection information generated from nested.proto</summary>
  public static partial class NestedReflection {

    #region Descriptor
    /// <summary>File descriptor for nested.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NestedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxuZXN0ZWQucHJvdG8SBm5lc3RlZCJ0CgtOZXN0ZWRPdXRlchISCgpvdXRl",
            "cl9uYW1lGAEgASgJEi4KBWlubmVyGAIgASgLMh8ubmVzdGVkLk5lc3RlZE91",
            "dGVyLk5lc3RlZElubmVyGiEKC05lc3RlZElubmVyEhIKCmlubmVyX25hbWUY",
            "ASABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Nested.NestedOuter), global::Nested.NestedOuter.Parser, new[]{ "OuterName", "Inner" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Nested.NestedOuter.Types.NestedInner), global::Nested.NestedOuter.Types.NestedInner.Parser, new[]{ "InnerName" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NestedOuter : pb::IMessage<NestedOuter> {
    private static readonly pb::MessageParser<NestedOuter> _parser = new pb::MessageParser<NestedOuter>(() => new NestedOuter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NestedOuter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Nested.NestedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter(NestedOuter other) : this() {
      outerName_ = other.outerName_;
      inner_ = other.inner_ != null ? other.inner_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NestedOuter Clone() {
      return new NestedOuter(this);
    }

    /// <summary>Field number for the "outer_name" field.</summary>
    public const int OuterNameFieldNumber = 1;
    private string outerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OuterName {
      get { return outerName_; }
      set {
        outerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inner" field.</summary>
    public const int InnerFieldNumber = 2;
    private global::Nested.NestedOuter.Types.NestedInner inner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Nested.NestedOuter.Types.NestedInner Inner {
      get { return inner_; }
      set {
        inner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NestedOuter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NestedOuter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OuterName != other.OuterName) return false;
      if (!object.Equals(Inner, other.Inner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OuterName.Length != 0) hash ^= OuterName.GetHashCode();
      if (inner_ != null) hash ^= Inner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OuterName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OuterName);
      }
      if (inner_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Inner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OuterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OuterName);
      }
      if (inner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NestedOuter other) {
      if (other == null) {
        return;
      }
      if (other.OuterName.Length != 0) {
        OuterName = other.OuterName;
      }
      if (other.inner_ != null) {
        if (inner_ == null) {
          Inner = new global::Nested.NestedOuter.Types.NestedInner();
        }
        Inner.MergeFrom(other.Inner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OuterName = input.ReadString();
            break;
          }
          case 18: {
            if (inner_ == null) {
              Inner = new global::Nested.NestedOuter.Types.NestedInner();
            }
            input.ReadMessage(Inner);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NestedOuter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NestedInner : pb::IMessage<NestedInner> {
        private static readonly pb::MessageParser<NestedInner> _parser = new pb::MessageParser<NestedInner>(() => new NestedInner());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NestedInner> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Nested.NestedOuter.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedInner() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedInner(NestedInner other) : this() {
          innerName_ = other.innerName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NestedInner Clone() {
          return new NestedInner(this);
        }

        /// <summary>Field number for the "inner_name" field.</summary>
        public const int InnerNameFieldNumber = 1;
        private string innerName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InnerName {
          get { return innerName_; }
          set {
            innerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NestedInner);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NestedInner other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InnerName != other.InnerName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (InnerName.Length != 0) hash ^= InnerName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (InnerName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(InnerName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (InnerName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InnerName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NestedInner other) {
          if (other == null) {
            return;
          }
          if (other.InnerName.Length != 0) {
            InnerName = other.InnerName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                InnerName = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
