<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nested.proto

namespace Nested;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nested.NestedOuter</code>
 */
class NestedOuter extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string outer_name = 1;</code>
     */
    private $outer_name = '';
    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner inner = 2;</code>
     */
    private $inner = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $outer_name
     *     @type \Nested\NestedOuter\NestedInner $inner
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Nested::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string outer_name = 1;</code>
     * @return string
     */
    public function getOuterName()
    {
        return $this->outer_name;
    }

    /**
     * Generated from protobuf field <code>string outer_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOuterName($var)
    {
        GPBUtil::checkString($var, True);
        $this->outer_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner inner = 2;</code>
     * @return \Nested\NestedOuter\NestedInner
     */
    public function getInner()
    {
        return $this->inner;
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner inner = 2;</code>
     * @param \Nested\NestedOuter\NestedInner $var
     * @return $this
     */
    public function setInner($var)
    {
        GPBUtil::checkMessage($var, \Nested\NestedOuter_NestedInner::class);
        $this->inner = $var;

        return $this;
    }

}

