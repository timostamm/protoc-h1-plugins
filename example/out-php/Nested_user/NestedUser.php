<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nested-user.proto

namespace Nested_user;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nested_user.NestedUser</code>
 */
class NestedUser extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.nested.NestedOuter no = 1;</code>
     */
    private $no = null;
    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner ni = 2;</code>
     */
    private $ni = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Nested\NestedOuter $no
     *     @type \Nested\NestedOuter\NestedInner $ni
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\NestedUser::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter no = 1;</code>
     * @return \Nested\NestedOuter
     */
    public function getNo()
    {
        return $this->no;
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter no = 1;</code>
     * @param \Nested\NestedOuter $var
     * @return $this
     */
    public function setNo($var)
    {
        GPBUtil::checkMessage($var, \Nested\NestedOuter::class);
        $this->no = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner ni = 2;</code>
     * @return \Nested\NestedOuter\NestedInner
     */
    public function getNi()
    {
        return $this->ni;
    }

    /**
     * Generated from protobuf field <code>.nested.NestedOuter.NestedInner ni = 2;</code>
     * @param \Nested\NestedOuter\NestedInner $var
     * @return $this
     */
    public function setNi($var)
    {
        GPBUtil::checkMessage($var, \Nested\NestedOuter_NestedInner::class);
        $this->ni = $var;

        return $this;
    }

}

